#include "database.h"

std::vector<Being> beings;

Being cccccc("CCCCCC",
  "7363798734697883970710636001836975588091735708688627633453684944157220"
  "6828755704161744856774794451505857018393110573233290968747698054101859"
  "4535855085206587230637804112249388506538218751318674928257541860661289"
  "7252817517944730395274624804274408678252943116164664153711495548032075"
  "6500878674308468167065896333784014214277231441349791581620721622859636"
  "7303610494883737812385296534212301924454061667740789162494864435895944"
  "4481251447900036872734601881683295503952092863230760329658254051999170"
  "7982817750088359351390330383670440304042101945697852307763861338622148"
  "0305384035691512830675437658500708255078488867991839319025744632255809"
  "4304816585970712578278640514530960176518765078157863142395461173012949"
  "1075806126347538071544811247384051344446314431467637538846808613024625"
  "5407590556738978031932258834092031086228112048580099170663251255777052"
  "9904995826489883818216988732777354750651564257789481872858314875820428"
  "3285733578043467807462396566248469410002460694711976429919919676268818"
  "9611515765081301946683419431566565770247548242973976505569370300871950"
  "6105639700133145626000054817011557634966288520444244497719978130127138"
  "3950210083741505027629723211943340070103674162580708730324850414093238"
  "1608195768360518022815457357068989074954381",
  "1304993590170532815564584313455331237783637816512705654360829774396135"
  "7994954717322917425749364642943354291308521375017815197673634269952642"
  "0648990703464945248532071716729673844568792726143091424684881888949619"
  "8032642106528691368723413730466185004438451292576440955342411536470676"
);

Being enigmavox("Enigmavox",
  "6711868850815191161700271564583957956707616585817659646620530232212280"
  "2074266174471959987605759075181994326812452800259977259260584736921616"
  "7326698997572316216646684942627968265633533189258501444218759898619690"
  "2478311929081670013499670613164708444903080909356432015314269867962100"
  "7787741452914528583688821776513813911697851702732478510312087297410339"
  "0084214735764948862253057893493648533907024690301613984584767676965414"
  "7375003921434644861973421868859747466263617274557211226415680543120068"
  "5664939334177078401793297633393565561314994001346887730434752749884465"
  "3207667194442952475589182363231034142086337614706275350517455790774848"
  "9547647789791103839964303436215047842428131602482359840700045733240212"
  "7343879440952496985428826445744122653233327865905132599690533953976754"
  "9347646558767506679577320706535943247310901150238059998373605583792742"
  "9642559942402692290286751517669767080330969826048454674565227667731815"
  "1001861505891140432925339534904815866082336539988479531638549495120788"
  "2763956925314536473050714068689555610785396097075263222860645566388764"
  "0817731292274988919182783899089925537891210845240076534300332760149178"
  "7636184008280463755492958157543366775901127539039690880448209246165966"
  "4019774153790088464207224035185253906635571",
  "1304993590170532815564584313455331237783637816512705654360829774396135"
  "7994954717322917425749364642943354291308521375017815197673634269952642"
  "0648990703464945248532071716729673844568792726143091424684881888949619"
  "8032642106528691368723413730466185004438451292576440955342411536470676"
);

Being twov("TwoV",
  "8237751027745228841703549787092748203886464758425044248985980972205078"
  "5357911826877218888445311975016125425479289787452002860490067577429342"
  "6553587844530914264109124746655553202015690549650650052641699059988928"
  "9349866061747919083955326198315309759959746040606527628865447669092680"
  "1426315603950040471539842241074452716616034130769500450292364733642028"
  "2285664111447245167809271883882565515095962178812289590556965573444020"
  "0607092742280906060771931228053772914894565840170775443978478039264918"
  "3623114960173771069531132548620855486309007074438216429113547216260883"
  "1040768326748153959507518586738907522434159787631727687022523856235763"
  "2570159474412311092442129883364347950994692307419622242822056641024465"
  "8649914635462128377941195930451701557350581580909268108519664908176798"
  "6602199622183997243890849709618649927335895704175637043406813656371099"
  "3385113282071883214055039315131301854952393487434830861730795024246756"
  "3039035969253230552501199175237821744903121352795787710340588882948208"
  "7328437584570576605034100879100925428701702095841675450412612452713995"
  "6628820072916813342712130031656670791281823081028056052735850632573199"
  "8578127378255984770954142725088024055853571504541666367465325064927896"
  "1302196101888570575228162270884017555618489",
  "1304993590170532815564584313455331237783637816512705654360829774396135"
  "7994954717322917425749364642943354291308521375017815197673634269952642"
  "0648990703464945248532071716729673844568792726143091424684881888949619"
  "8032642106528691368723413730466185004438451292576440955342411536470676"
);

Being rpi("RPI",
  "3947176151669173540941940691608637876693945721672154332897536081856756"
  "0182431353848302778711730922012459701572235784505596230179052498172258"
  "3711921804173272031475062100237083318897788373146197544072421575688064"
  "1295067351103877810202113640343978391684361202034947064305916055556350"
  "5911313649550722555260939485414730353815715039561089258069559177274165"
  "7360072750525982958463949304138061934491869493488740411345684547219439"
  "0360203333861897683366389305819224130718069044813677049289335669956015"
  "0737579539457209267465995660737111513507693699668054346246049153550518"
  "0575271695891292167762264032905386178713792276707772643842780973695124"
  "3160372246225823681606367818005186167408574631900306216895415596202602"
  "5020989319369962812416955655488038306938973272496935337868588295572647"
  "4263766905303380797672458365201883242347083103854995147487437108182113"
  "0007455128751469513531317508522385867521504775322181210830121529303263"
  "5668994041635301686136492177472770058321564102614973449252968642353929"
  "8285893404686051331156978846563530002043033908059579724279026562132732"
  "4695952703151364666591243583333960425700210799502888843037078943391128"
  "7665234195763738819938093256496900910179799314462376327226018452473120"
  "1607386048028868266209915639403897949789523",
  "1304993590170532815564584313455331237783637816512705654360829774396135"
  "7994954717322917425749364642943354291308521375017815197673634269952642"
  "0648990703464945248532071716729673844568792726143091424684881888949619"
  "8032642106528691368723413730466185004438451292576440955342411536470676"
);

Being mu("Mu",
  "7034325871339534872027722619149060224163859320996316448560259594002500"
  "6602335399430953543463358937145035763316136355318965810377002719217527"
  "1225035714814117110971660012956479432352103105134367430470084300865848"
  "2741243990403537062605052194378345127512399400887496892318859325818094"
  "1863342360719258806899819959162499807689535978531615302417937201558904"
  "8295075267758288012913999526202077042214950821195876589673664071104305"
  "0485692494080267245718264284714449154485912858431549880381348224449692"
  "6953631723519617162511011039660390995880538963382900609460210795081568"
  "0204282706571025683368914486797298175711577133374182924131866196419771"
  "6529959523864043806258685304880412848980443496533521568301059735436683"
  "2015402546777220259736847481069376064623752368530893981138281415766557"
  "8312096874044888215884185709224828564968292723717675331991428129502071"
  "1939513314735129165087378646534671356004783852469906236888488640732045"
  "1137437438596050089900583498935815025264937438776673571884822827292664"
  "4534238030811357052050877694193066237388769309154397263703073433908079"
  "6569724150529828301008882040863054748033592220075394356551554390659584"
  "8021915854019980699229097788291576909894690078912882901370738399515182"
  "4592182975399521192632371465845133439502393",
  "1304993590170532815564584313455331237783637816512705654360829774396135"
  "7994954717322917425749364642943354291308521375017815197673634269952642"
  "0648990703464945248532071716729673844568792726143091424684881888949619"
  "8032642106528691368723413730466185004438451292576440955342411536470676"
);

Being eugebe("eugebe",
  "3154492651862940660356345356291822432647476844540710319473125540160620"
  "9907735726367656056830468267952333107171201119200481362444984286497062"
  "4179030549935883570351094525610593352428267258379347830330448510425453"
  "8922611362409885279535434740102314675476639374276926653273639978734126"
  "9749419813329786169929655423237593744344572112357652908688443628318912"
  "4620012842758441410234253323053896050691164634677636287237820061389437"
  "7733958807157478384021168748365850105818730185808762372716369906242938"
  "4404582483145563375313301005533547721038402098619233431690908567348977"
  "1399653324499194367815948975210629658066636345748110500467109445754382"
  "1774932289773063911364495087915207032780427461616775420448383004519037"
  "9366268220621641628052731111841901715842297272805630054804849873801442"
  "8632021623252997386205622394587764564742321745456634797245323386184357"
  "6658684510799351802455515434155785907643933363221016352354383611821693"
  "1374362638470283981012326597687151161086678629488241671093329101817693"
  "1215526978773056673004688185992299741271253599792075343575891639077726"
  "0345707334949209309132597924301969681901463086381169472822417349094235"
  "6151071077922235021039991351539223573047394347410622410569663884506361"
  "090160843611654578912925829083099896775739",
  "1304993590170532815564584313455331237783637816512705654360829774396135"
  "7994954717322917425749364642943354291308521375017815197673634269952642"
  "0648990703464945248532071716729673844568792726143091424684881888949619"
  "8032642106528691368723413730466185004438451292576440955342411536470676"
);

void Database::init() {
  beings.push_back(cccccc);
  beings.push_back(enigmavox);
  beings.push_back(twov);
  beings.push_back(rpi);
  beings.push_back(mu);
  beings.push_back(eugebe);
  return;
}

bool Database::search(std::string name, Being& b) {
  for (const auto& being : beings) {
    if (being.name == name) {
      b = Being(being.name, being.rsa_n, being.rsa_e);
      return true;
    }
  }

  return false;
}
